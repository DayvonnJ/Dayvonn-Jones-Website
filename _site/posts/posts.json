[
  {
    "path": "posts/welcome/",
    "title": "Dayvonn Jones",
    "description": "Welcome to my blog, adn thank you for coming. I will posting projects and updates to share with you!",
    "author": [
      {
        "name": "Dayvonn Jones",
        "url": "https://dayvonnjones.netlify.app"
      }
    ],
    "date": "2022-05-24",
    "categories": [],
    "contents": "\n\n\n\n",
    "preview": {},
    "last_modified": "2022-05-24T20:27:41-04:00",
    "input_file": {}
  },
  {
    "path": "posts/2022-05-24-are-yelp-reviews-providing-insight-to-restaurants-closing-down/",
    "title": "are-yelp-reviews-providing-insight-to-restaurants-closing-down",
    "description": "Both big restaurant corporations and small business owners can understand how market demands influence the success of their restaurant, and apply this research to their own restaurant. Policymakers can also understand what factors they should focus on when trying to help restaurants stay open during hard times like COVID-19.",
    "author": [
      {
        "name": "Dayvonn Jones",
        "url": "https://dayvonnjones.netlify.app"
      }
    ],
    "date": "2022-05-24",
    "categories": [],
    "contents": "\n#Library Set Up#\n\n\nlibrary(tidyverse)\nlibrary(ggplot2)\nlibrary(tidytext)\nlibrary(syuzhet)\nlibrary(mlr)\nlibrary(xgboost)\nlibrary(modelStudio)\nlibrary(DALEX)\nlibrary(tidyr)\nlibrary(tidytext)\nlibrary(rtweet)\nlibrary(quanteda)\nlibrary(quanteda.textplots)\nlibrary(jsonlite)\nlibrary(sentimentr)\nlibrary(dplyr)\nlibrary(ggplot2)\nlibrary(textclean)\nlibrary(tm)\nlibrary(syuzhet)\nlibrary(NLP)\nlibrary(wordcloud)\nlibrary(RColorBrewer)\nlibrary(SnowballC)\nlibrary(textdata)\n\n\n\n#Data Set Up\n\n\nyelp_reviews <- read_csv('/Users/dayvonnjones/Documents/Studio Final Project/Data Cleaning/Yelp Dataset Shortened.csv')\nview(yelp_reviews)\nhead(yelp_reviews)\n\n\n# A tibble: 6 × 25\n   ...1 index `Unnamed: 0` review_id       user_id business_id stars_x\n  <dbl> <dbl>        <dbl> <chr>           <chr>   <chr>         <dbl>\n1     0     0            0 KU_O5udG6zpxOg… mh_-eM… XQfwVwDr-v…       3\n2     1     1            1 VJxlBnJmCDIy8D… Iaee7y… XQfwVwDr-v…       2\n3     2     2            2 S6pQZQocMB1WHM… ejFxLG… XQfwVwDr-v…       4\n4     3     3            3 WqgTKVqWVHDHjn… f7xa0p… XQfwVwDr-v…       3\n5     4     4            4 AqPFMleE6RsU23… _7bHUi… kxX2SOes4o…       5\n6     5     5            5 HME_ksGph3se7A… kSMOJw… kxX2SOes4o…       2\n# … with 18 more variables: useful <dbl>, funny <dbl>, cool <dbl>,\n#   text <chr>, date <dttm>, name <chr>, address <chr>, city <chr>,\n#   state <chr>, postal_code <dbl>, latitude <dbl>, longitude <dbl>,\n#   stars_y <dbl>, review_count <dbl>, is_open <dbl>,\n#   attributes <chr>, categories <chr>, hours <chr>\n\n#Bar Chart for Restaurants Open#\n\n\nggplot(yelp_reviews, aes(x=factor(is_open)))+\n  geom_bar(stat=\"count\", width=0.7, fill=\"steelblue\")+\n  theme_minimal()\n\n\n\n\n#Bar Chart for Restaurants in States#\n\n\nggplot(yelp_reviews, aes(x=factor(state)))+\n  geom_bar(stat=\"count\", width=0.7, fill=\"steelblue\")+\n  theme_minimal()\n\n\n\n\n#Set Up Sentiments# text.yelp_reviews(tibble(text = str_to_lower(df$tesxt)))\n#The Reviews Ran for the First Time#\n\n\nsentiment<-read.csv('/Users/dayvonnjones/Documents/Studio Final Project/Data Cleaning/Yelp Dataset Shortened.csv')\ntext.sentiment <- tibble(text = str_to_lower(sentiment$text))\n\n\n\n#Set Up Phrases#\n\n\ncolnames(sentiment)\n\n\n [1] \"X\"            \"index\"        \"Unnamed..0\"   \"review_id\"   \n [5] \"user_id\"      \"business_id\"  \"stars_x\"      \"useful\"      \n [9] \"funny\"        \"cool\"         \"text\"         \"date\"        \n[13] \"name\"         \"address\"      \"city\"         \"state\"       \n[17] \"postal_code\"  \"latitude\"     \"longitude\"    \"stars_y\"     \n[21] \"review_count\" \"is_open\"      \"attributes\"   \"categories\"  \n[25] \"hours\"       \n\nphrasesCorpus = Corpus(VectorSource(sentiment$text))\nphrasesCorpus[[1]][1]\n\n\n$content\n[1] \"If you decide to eat here, just be aware it is going to take about 2 hours from beginning to end. We have tried it multiple times, because I want to like it! I have been to it's other locations in NJ and never had a bad experience. \\n\\nThe food is good, but it takes a very long time to come out. The waitstaff is very young, but usually pleasant. We have just had too many experiences where we spent way too long waiting. We usually opt for another diner or restaurant on the weekends, in order to be done quicker.\"\n\n#Sentiment Set Up#\n\n\nemotions <- get_nrc_sentiment(sentiment$text)\nemotion_bar <- colSums(emotions)\nemotion_sum <-data.frame(count=emotion_bar, emotion=names(emotion_bar))\n\n\n\n#Bar Plot Showing the Count for 8 Different Emotions and the Negative and Positive Rating#\n\n\nggplot(emotion_sum, aes(x = reorder(emotion, -count), y = count)) + \n  geom_bar(stat = 'identity')\n\n\n\n  labs(y = \"Count of Emotion\", x = NULL) + \n  coord_flip()\n\n\nNULL\n\nggsave(\"emotion_sum.jpeg\")\n\n\n\n#Sentiment Analysis with the “tidytext” Package Using the “bing” lexicon#\n\n\nbing_word_counts <- text.sentiment %>% unnest_tokens(output = word, input = text) %>%\n  inner_join(get_sentiments(\"bing\")) %>%\n  count(word, sentiment, sort = TRUE)\n\n\n\n#Select Top 10 Words by Sentiment#\n\n\nbing_top_10_words_by_sentiment <- bing_word_counts %>% \n  group_by(sentiment) %>% \n  slice_max(order_by = n, n = 10) %>% \n  ungroup() %>% \n  mutate(word = reorder(word, n)) \nbing_top_10_words_by_sentiment\n\n\n# A tibble: 23 × 3\n   word         sentiment     n\n   <fct>        <chr>     <int>\n 1 disappointed negative      9\n 2 fried        negative      9\n 3 slow         negative      6\n 4 terrible     negative      6\n 5 bad          negative      5\n 6 cheap        negative      5\n 7 die          negative      5\n 8 hard         negative      5\n 9 pricey       negative      5\n10 cold         negative      4\n# … with 13 more rows\n\n#Create a Bar Plot Showing the Contribution of Words to the Sentiment#\n\n\nbing_top_10_words_by_sentiment %>% \n  ggplot(aes(word, n, fill = sentiment)) + \n  geom_col(show.legend = FALSE) + \n  facet_wrap(~sentiment, scales = \"free_y\") + \n  labs(y = \"Contribution to Sentiment Words\", x = NULL) + \n  coord_flip()\n\n\n\nggsave(\"contribution_to_sentiment_words.jpeg\")\n\n\n\n#Sentiment Analysis with the “tidytext” Package using the “loughran” lexicon#\n\n\nloughran_word_counts <- text.sentiment %>% unnest_tokens(output = word, input = text) %>%\n  inner_join(get_sentiments(\"loughran\")) %>%\n  count(word, sentiment, sort = TRUE)\n\n\n\n#Selecting the Top 10 Words by the Sentiment#\n\n\nloughran_top_10_words_by_sentiment <- loughran_word_counts %>% \n  group_by(sentiment) %>% \n  slice_max(order_by = n, n = 10) %>% \n  ungroup() %>%\n  mutate(word = reorder(word, n))\nloughran_top_10_words_by_sentiment\n\n\n# A tibble: 36 × 3\n   word          sentiment        n\n   <fct>         <chr>        <int>\n 1 restrictions  constraining     1\n 2 disappointed  negative         9\n 3 slow          negative         6\n 4 bad           negative         5\n 5 disappointing negative         4\n 6 stopped       negative         4\n 7 cut           negative         3\n 8 miss          negative         3\n 9 poor          negative         3\n10 problem       negative         3\n# … with 26 more rows\n\n#Creating a Bar Plot Showing Contribution of Words to the Sentiment#\n\n\nloughran_top_10_words_by_sentiment %>% \n  ggplot(aes(word, n, fill = sentiment)) + \n  geom_col(show.legend = FALSE) + \n  facet_wrap(~sentiment, scales = \"free_y\") + \n  labs(y = \"Contribution to sentiment\", x = NULL) + \n  coord_flip()\n\n\n\nggsave(\"contribution_to_sentiment.jpeg\")\n\n\n\n\n\n\n",
    "preview": "posts/2022-05-24-are-yelp-reviews-providing-insight-to-restaurants-closing-down/are-yelp-reviews-providing-insight-to-restaurants-closing-down_files/figure-html5/unnamed-chunk-3-1.png",
    "last_modified": "2022-05-24T21:01:00-04:00",
    "input_file": "are-yelp-reviews-providing-insight-to-restaurants-closing-down.knit.md"
  },
  {
    "path": "posts/2022-05-24-sentiment-analysis-for-tweets-in-ukraine-march-2022/",
    "title": "sentiment-analysis-for-tweets-in-ukraine-march-2022",
    "description": "Twitter is one of the many organizations and social media platforms that have been exploited by and misused by organizers and supporters on either side of the conflict. People hope to use the platform to express beliefs and ideas that are not verified or peer-reviewed. Textual data were collected to observe negative and positive sentiments in the collection of tweets during March 2022 about the conflict in Ukraine. It can come from a popular outlet or an unverified user. The data was cleaned and then categorized to extract sentiments from the textual data. The sentiments and ideas expressed were visualized with a dashboard.",
    "author": [
      {
        "name": "Dayvonn Jones",
        "url": "https://dayvonnjones.netlify.app"
      }
    ],
    "date": "2022-05-24",
    "categories": [],
    "contents": "\n#Library Set UP#\n\n\nlibrary(flexdashboard)\nlibrary(tidyverse,quietly=T)\nlibrary(data.table,quietly=T)\nlibrary(htmltools)\nlibrary(htmlTable,quietly=T)\nlibrary(viridis,quietly=T)\nlibrary(plotly,quietly=T)\nlibrary(scales,quietly=T)\nlibrary(crosstalk)\nlibrary(maps)\nlibrary(flexdashboard)\nlibrary(shiny)\nlibrary(knitr)\nlibrary(kableExtra)\nlibrary(tidyverse)\nlibrary(plotly)\nlibrary(crosstalk)\nlibrary(bslib)\nlibrary(shiny)\nlibrary(tidyverse)\nlibrary(quanteda)\nlibrary(quanteda.textplots)\nlibrary(sentimentr)\nlibrary(viridis)\nlibrary(dplyr)\nlibrary(tidytext)\nlibrary(textdata)\nlibrary(stringr)\nlibrary(janeaustenr)\nlibrary(esquisse)\nlibrary(ggplot2)\nlibrary(plotly)\nlibrary(quantmod)\nlibrary(lubridate)\nlibrary(wordcloud)\nlibrary(sentiment.ai)\n\n\n\nAbout\nColumn\n#About this Flex Dashboard# Textual data analysis is an emerging field of NLP; This dashboard is an approach to understanding the sentiments and emotions of people in the war-zoned country using Twitter textual data. This dashboard is also an attempt to visualize the data efficiently and beautifully.\nColumn\n#Areas that are Covered#\n\n\n\n\n\nSentiment Class\n\n\n\nnegative\n\n\n\n\npositive\n\n\n\n\n\nSentiment Phrase\n\n\n\n\nSentiment Score\n\n\n\n\n\n\n\n\nSpatial Components\n#Most Mentioned Cities#\n\n\nshiny::includeHTML(\"/Users/dayvonnjones/Documents/Data Visualization Final Project/CM.html\")\n\n\n\n\n    \n        \n#User Provided GeoLocation#\n\n\nshiny::includeHTML(\"/Users/dayvonnjones/Documents/Data Visualization Final Project/UL.html\")\n\n\n\n\n    \n        \nSentiment Analysis\n#Emotions Count with nrc sentiment (syuzhet)#\n\n\ncol <- colorRampPalette(c(\"#ffd500\", \"#bfb72f\", \"#bfb72f\", \"#2b6f9c\", \"#005bbb\"))\ncol2 <- colorRampPalette(c(\"#005bbb\",\"#2b6f9c\", \"#bfb72f\",\"#bfb72f\", \"#ffd500\" ))\n\nf1 <-  ggplot(emotion) +\n   aes(x = reorder(phrase,-count), fill = class, weight = count) +\n   geom_bar() +\n   scale_fill_manual(values = c(negative = \"#FFD500\", \n  positive = \"#005BBB\")) +\n   labs(x = \"Emotion\", y = \"Frequency\", title = \"Tweet Emotions\", subtitle = \"Emotions counted by Positive-Negative Classes of tweets about Russia-Ukraine War; March 2022\", caption = \"Data visualization by Dayonn J., @DayvonnJ, Nilay V., @nilayvinchhi., Data source: Twitter API, produced using c(ggplot2, sentiment.ai, nrc sentiment) Libraries in R 4.1.3\", \n   fill = \"Sentiment Class\") +\n  geom_text(aes(x=reorder(phrase,-count), y = count, label = count), nudge_y=50)\nggplotly(p = f1)\n\n\n\n\n#Sentiment Analysis with Bing Lexicon#\n\n\ntext.sentiment <- tibble(text = str_to_lower(sentiment$phrase))\n\nbing_word_counts <- text.sentiment %>% unnest_tokens(output = word, input = text) %>%\n  inner_join(get_sentiments(\"bing\")) %>%\n  count(word, sentiment, sort = TRUE)\n\nbing_top_10_words_by_sentiment <- bing_word_counts %>% \n  group_by(sentiment) %>% \n  slice_max(order_by = n, n = 10) %>% \n  ungroup() %>% \n  mutate(word = reorder(word, n)) \n\nf2 <-  bing_top_10_words_by_sentiment %>% \n    ggplot(aes(word, n, fill = sentiment)) + \n    geom_col(show.legend = FALSE) + \n    facet_wrap(~sentiment, scales = \"free_y\") + \n    scale_fill_manual(values = c(negative = \"#FFD500\", \n  positive = \"#005BBB\"))+\n      coord_flip()+\n       labs(x = NULL, y = \"Phrases contributing to Sentiment Class\", title = \"Phrases by Sentiment Class for Tweets\", subtitle = \"Phrases counted by Positive-Negative Classes of tweets about Russia-Ukraine War; March 2022\", caption = \"Data visualization by Dayonn J., @DayvonnJ, Nilay V., @nilayvinchhi., Data source: Twitter API, produced using c(ggplot2, nrc sentiment) Libraries in R 4.1.3\")+\n    geom_text(aes(x=word, y = n, label = n), nudge_y=10, color= \"grey\")+\n  theme_minimal()\n\nggplotly(p = f2)\n\n\n\n\n#Sentiment Analysis using Loughran Lexicon#\n\n\nloughran_word_counts <- text.sentiment %>% unnest_tokens(output = word, input = text) %>%\n  inner_join(get_sentiments(\"loughran\")) %>%\n  count(word, sentiment, sort = TRUE)\n\nloughran_top_10_words_by_sentiment <- loughran_word_counts %>% \n  group_by(sentiment) %>% \n  slice_max(order_by = n, n = 10) %>% \n  ungroup() %>%\n  mutate(word = reorder(word, n))\n\nf3 <-  loughran_top_10_words_by_sentiment %>% \n    ggplot(aes(word, n, fill = sentiment)) + \n    geom_col(show.legend = FALSE) + \n    facet_wrap(~sentiment, scales = \"free_y\") + \n     coord_flip()+\n      scale_fill_manual(values = c(negative = \"#FFD500\", positive = \"#005BBB\", uncertainty = \"#eacb10\", constraining = \"#95a24e\", litigious = \"#55847d\"))+\n         labs(x = NULL, y = \"Phrases contributing to Sentiments\", title = \"Phrases contributing to Sentiments for Tweets\", subtitle = \"Phrases counted by Sentiments of tweets about Russia-Ukraine War; March 2022\", caption = \"Data visualization by Dayonn J., @DayvonnJ, Nilay V., @nilayvinchhi., Data source: Twitter API, produced using c(ggplot2, tidytext, tidyverse, syuzhet) Libraries in R 4.1.3\")+\n      geom_text(aes(x=word, y = n, label = n), nudge_y=10, color= \"grey\")+\n    theme_minimal()\nggplotly(p=f3)\n\n\n\n\n\n\n\n",
    "preview": {},
    "last_modified": "2022-05-24T20:57:18-04:00",
    "input_file": "sentiment-analysis-for-tweets-in-ukraine-march-2022.knit.md"
  }
]
